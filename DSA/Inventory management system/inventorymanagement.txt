Data Structures and Algorithms:

Data Structures: Suitable data structures for this problem include HashMap, ArrayList, and LinkedList. A HashMap is chosen here for its average O(1) time complexity for insertions, deletions, and lookups.
Time Complexity Analysis:

Add Product: 

O(1) on average due to the HashMap's average-case performance.
Update Product: O(1) on average since it uses the same HashMap methods for updates.
Delete Product: O(1) on average for deletions using the HashMap.

Optimization:

Using a HashMap optimizes the time complexity for add, update, and delete operations.
Further optimizations can be made by considering concurrent data structures if the system is to be used in a multi-threaded environment.